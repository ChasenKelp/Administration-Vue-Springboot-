<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.prj.mapper.EmployeeMapper">
    
    <resultMap type="Employee" id="EmployeeResult">
        <result property="id"    column="id"    />
        <result property="dept"    column="dept"    />
        <result property="name"    column="name"    />
        <result property="position"    column="position"    />
        <result property="salary"    column="salary"    />
    </resultMap>

    <sql id="selectEmployeeVo">
        select id, dept, name, position, salary from employee
    </sql>

    <select id="selectEmployeeList" parameterType="Employee" resultMap="EmployeeResult">
        <include refid="selectEmployeeVo"/>
        <where>  
            <if test="dept != null  and dept != ''"> and dept = #{dept}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="position != null  and position != ''"> and position = #{position}</if>
            <if test="salary != null "> and salary = #{salary}</if>
        </where>
    </select>
    
    <select id="selectEmployeeById" parameterType="Long" resultMap="EmployeeResult">
        <include refid="selectEmployeeVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertEmployee" parameterType="Employee" useGeneratedKeys="true" keyProperty="id">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="dept != null">dept,</if>
            <if test="name != null">name,</if>
            <if test="position != null">position,</if>
            <if test="salary != null">salary,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="dept != null">#{dept},</if>
            <if test="name != null">#{name},</if>
            <if test="position != null">#{position},</if>
            <if test="salary != null">#{salary},</if>
         </trim>
    </insert>

    <update id="updateEmployee" parameterType="Employee">
        update employee
        <trim prefix="SET" suffixOverrides=",">
            <if test="dept != null">dept = #{dept},</if>
            <if test="name != null">name = #{name},</if>
            <if test="position != null">position = #{position},</if>
            <if test="salary != null">salary = #{salary},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteEmployeeById" parameterType="Long">
        delete from employee where id = #{id}
    </delete>

    <delete id="deleteEmployeeByIds" parameterType="String">
        delete from employee where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>